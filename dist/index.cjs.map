{"version":3,"file":"index.cjs","sources":["../src/components/ontology-annotation.ce.vue","../src/components/ontology-autocomplete.ce.vue","../src/components/ontology-annotate.ce.vue","../src/components/ontology-compose.ce.vue","../src/OntologyElements.js"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nconst props = defineProps<{\n  annotation?: string\n}>()\n\nconst term = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[0] : ''\n})\nconst iri = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[2] : ''\n})\nconst source = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[1] : ''\n})\n</script>\n<template>\n  <a v-if=\"annotation && annotation != ''\" :href=\"iri\" target=\"_blank\">\n    {{ source }}: {{ term }}\n  </a>\n</template>\n","<template>\n  <div class=\"auto-search-wrapper\">\n    <label v-if=\"label\">{{ label }}</label>\n    <input\n      type=\"text\"\n      id=\"search\"\n      v-model=\"searchTerm\"\n      @input.stop=\"getSelectOptions\"\n      :placeholder=\"placeholder\"\n      autocomplete=\"off\"\n    />\n    <p v-if=\"info && matches.length == 0\">{{ info }}</p>\n    <div v-else class=\"auto-results-wrapper auto-is-active\">\n      <ul tabindex=\"0\" role=\"listbox\">\n        <li\n          v-for=\"doc in matches\"\n          :key=\"doc['short_label']\"\n          role=\"option\"\n          tabindex=\"-1\"\n          aria-selected=\"false\"\n          aria-setsize=\"3\"\n          aria-posinset=\"0\"\n          @click=\"selectTerm(doc)\"\n        >\n          <p v-html=\"highlight(doc['label'])\"></p>\n          <p><small v-html=\"concat(doc['description'])\"></small></p>\n          <small>{{ doc['ontology_prefix'] }}:{{ doc['iri'] }}</small>\n        </li>\n      </ul>\n    </div>\n    <button\n      v-if=\"searchTerm != '' && matches.length > 0\"\n      type=\"button\"\n      aria-label=\"clear the search query\"\n    ></button>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  info: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  ontologies: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  format: {\n    type: String,\n    required: false,\n    default: 'text'\n  }\n})\n\nlet searchTerm = ref('')\n\nconst emit = defineEmits(['change'])\n\nlet matches = ref([])\n\nasync function getSelectOptions() {\n  if (searchTerm.value === '') {\n    matches.value = []\n    return []\n  }\n  let ontologiesExists = searchTerm.value.indexOf(':')\n  let ontologies = ''\n  let term = null\n  if (ontologiesExists < 0) {\n    ontologies = props.ontologies\n    term = searchTerm.value\n  } else {\n    term = searchTerm.value.split(':')[1]\n    ontologies = searchTerm.value.split(':')[0]\n  }\n\n  const url = 'https://service.tib.eu/ts4tib/api/select?q='\n  const queries = encodeURI(\n    '&ontology=' +\n      ontologies +\n      '&fieldList=iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type&obsoletes=false&local=false&rows=10'\n  )\n\n  let response = (await fetch(`${url}${term}${queries}`)).json()\n  response.then((body) => {\n    matches.value = body.response.docs\n  })\n}\n\nfunction highlight(content: string) {\n  if (!searchTerm.value) {\n    return content\n  }\n  return content.replace(new RegExp(searchTerm.value, 'gi'), (match) => {\n    return '<span class=\"highlightText\">' + match + '</span>'\n  })\n}\n\nfunction concat(data: Array<[]>) {\n  return data ? data.join('') : ''\n}\n\nlet selectedTerm = ref(null)\n\nconst selectedValue = computed(() => {\n  if (!selectedTerm.value) {\n    return null\n  }\n  if (props.format && props.format == 'json') {\n    return selectedTerm.value\n  } else {\n    return selectedTerm.value\n      ? selectedTerm.value['label'] +\n          '\\t' +\n          selectedTerm.value['ontology_prefix'] +\n          '\\t' +\n          selectedTerm.value['iri'] +\n          '\\t' +\n          selectedTerm.value['type']\n      : ''\n  }\n})\n\nconst selectTerm = (term: any) => {\n  selectedTerm.value = term\n  searchTerm.value = term.label\n  emit('change', selectedValue.value)\n  matches.value = []\n}\n</script>\n\n<style scoped>\n:root {\n  --close-button: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M18.984 6.422 13.406 12l5.578 5.578-1.406 1.406L12 13.406l-5.578 5.578-1.406-1.406L10.594 12 5.016 6.422l1.406-1.406L12 10.594l5.578-5.578z'/%3E%3C/svg%3E\");\n  --loupe-icon: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23929292' d='M16.041 15.856a.995.995 0 0 0-.186.186A6.97 6.97 0 0 1 11 18c-1.933 0-3.682-.782-4.95-2.05S4 12.933 4 11s.782-3.682 2.05-4.95S9.067 4 11 4s3.682.782 4.95 2.05S18 9.067 18 11a6.971 6.971 0 0 1-1.959 4.856zm5.666 4.437-3.675-3.675A8.967 8.967 0 0 0 20 11c0-2.485-1.008-4.736-2.636-6.364S13.485 2 11 2 6.264 3.008 4.636 4.636 2 8.515 2 11s1.008 4.736 2.636 6.364S8.515 20 11 20a8.967 8.967 0 0 0 5.618-1.968l3.675 3.675a.999.999 0 1 0 1.414-1.414z'/%3E%3C/svg%3E\");\n}\n\n.auto-search-wrapper {\n  display: block;\n  position: relative;\n  width: 100%;\n}\n\n.auto-search-wrapper p {\n  margin: 0;\n  padding: 0;\n  font-size: 1.1em;\n}\n\n.auto-search-wrapper p .highlightText {\n  font-weight: bold;\n}\n\n.auto-search-wrapper input {\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border-box;\n  font-size: 16px;\n  padding: 12px 45px 12px 10px;\n  width: 100%;\n}\n\n.auto-search-wrapper input:focus {\n  border: 1px solid #858585;\n  outline: none;\n}\n\n.auto-search-wrapper input::-ms-clear {\n  display: none;\n}\n\n.auto-search-wrapper ul {\n  list-style: none;\n  margin: 0;\n  overflow: auto;\n  padding: 0;\n}\n\n.auto-search-wrapper ul li {\n  cursor: pointer;\n  margin: 0;\n  overflow: hidden;\n  padding: 10px;\n  position: relative;\n  border: 1px dotted #f1f1f2;\n}\n\n.auto-search-wrapper ul li:hover {\n  background-color: #f1f1f2;\n}\n\n.auto-search-wrapper ul li:not(:last-child) {\n  border-top: none;\n}\n\n.auto-search-wrapper ul li[disabled] {\n  background: #ececec;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.auto-search-wrapper .auto-expanded {\n  border: 1px solid #858585;\n  outline: none;\n}\n\n.auto-search-wrapper.loupe:before {\n  filter: invert(60%);\n}\n\n.auto-is-loading:after {\n  animation: auto-spinner 0.6s linear infinite;\n  border-color: #d9d9d9 grey grey #d9d9d9;\n  border-radius: 50%;\n  border-style: solid;\n  border-width: 2px;\n  bottom: 0;\n  box-sizing: border-box;\n  content: '';\n  height: 20px;\n  margin: auto;\n  position: absolute;\n  right: 10px;\n  top: 0;\n  width: 20px;\n}\n\n.auto-is-loading .auto-clear {\n  display: none;\n}\n\n@keyframes auto-spinner {\n  to {\n    transform: rotate(1turn);\n  }\n}\n\nli.loupe:before {\n  bottom: auto;\n  top: 15px;\n}\n\n.loupe input {\n  padding: 12px 45px 12px 35px;\n}\n\n.loupe:before {\n  background-image: var(--loupe-icon);\n  bottom: 0;\n  content: '';\n  height: 17px;\n  left: 10px;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  width: 17px;\n}\n\n.auto-selected:before {\n  opacity: 1;\n}\n\n.auto-clear {\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  bottom: 0;\n  cursor: pointer;\n  display: flex;\n  height: auto;\n  justify-content: center;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 40px;\n}\n\n.auto-clear:before {\n  content: var(--close-button);\n  height: 24px;\n  line-height: 100%;\n  width: 24px;\n}\n\n.auto-clear span {\n  display: none;\n}\n\n.auto-results-wrapper {\n  background-color: #fff;\n  border: 1px solid #858585;\n  border-top: none;\n  box-sizing: border-box;\n  display: none;\n  overflow: hidden;\n}\n\n.auto-results-wrapper ul > .loupe {\n  padding-left: 40px;\n}\n\n.auto-results-wrapper.auto-is-active {\n  display: block;\n  margin-top: -1px;\n  position: absolute;\n  width: 100%;\n  z-index: 99999;\n}\n\n.auto-selected {\n  background-color: #e6e6e6;\n}\n\n.auto-selected + li:before {\n  border-top: none;\n}\n\n.auto-error {\n  border: 1px solid #ff3838;\n}\n\n.auto-error::placeholder {\n  color: #f66;\n  opacity: 1;\n}\n\n.hidden {\n  display: none;\n}\n</style>\n","<template>\n  <div>\n    <label v-if=\"label\">{{ label }}</label>\n    <div>\n      <div\n        @mouseup=\"checkSelection\"\n        @keyup=\"checkSelection\"\n        @input=\"onInput\"\n        class=\"vc_textarea\"\n        contenteditable=\"true\"\n      >\n        {{ content }}\n      </div>\n      <div class=\"contextmenu\" :style=\"'left:' + cords.x + 'px; top:' + cords.y + 'px'\">\n      <div class=\"contextmenu-item\" v-if=\"matches.length == 0 && !loading\">No matches found</div>\n      <div v-else>\n        <div\n          class=\"contextmenu-item\"\n          v-for=\"doc in matches\"\n          :key=\"doc['short_label']\"\n          role=\"option\"\n          tabindex=\"-1\"\n          aria-selected=\"false\"\n          aria-setsize=\"3\"\n          aria-posinset=\"0\"\n          @click.capture.stop.prevent=\"selectTerm(doc)\"\n        >\n          <p v-html=\"highlight(doc['label'])\"></p>\n          <small class=\"iri\">{{ doc['ontology_prefix'] }}:{{ doc['iri'] }}</small>\n        </div>\n      </div>\n    </div>\n    </div>\n    <div>\n      <div v-if=\"loading\" style=\"float: right\">\n        <i>...loading</i>\n      </div>\n      <div>\n        <span v-if=\"info\">{{ info }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, computed, reactive } from 'vue'\n\nconst emit = defineEmits(['change'])\n\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  info: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  ontologies: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  format: {\n    type: String,\n    required: false,\n    default: 'text'\n  }\n})\n\nlet content = ref('')\n\nconst bratOnto = computed(() => {\n  if (!content.value) {\n    return null\n  }\n  if (props.format && props.format == 'json') {\n    return {\n      text: content.value,\n      ontology: selectedTerms\n    }\n  } else {\n    return (\n      content.value +\n      '\\n$$$$\\n' +\n      selectedTerms\n        .map(\n          (t) =>\n            t.ontology['type'][0] +\n            '\\t' +\n            t.ontology['ontology_prefix'] +\n            ' ' +\n            t.context['start'] +\n            ' ' +\n            t.context['end'] +\n            '\\t' +\n            t.ontology['label'] +\n            '\\t' +\n            t.ontology['iri']\n        )\n        .join('\\n')\n    )\n  }\n})\n\nlet searchTerm = ref('')\n\nlet loading = ref(false)\n\nlet matches = ref([])\n\ntype MyType = {\n  ontology: any\n  context: any\n}\n\nlet selectedTerms: Array<MyType> = reactive([])\n\nconst pendingRequests = new WeakMap()\n\nlet cords: any = ref({ x: -1000, y: 0, start: -1, end: -1 })\n\nfunction onInput(e: any) {\n  content.value = e.target.innerText\n  emit('change', bratOnto.value)\n}\n\nfunction selectTerm(doc: any) {\n  let data = { ontology: doc, context: cords.value }\n  selectedTerms.push(data)\n  cords.value = { x: -1000, y: 0, start: -1, end: -1 }\n  matches.value = []\n  searchTerm.value = ''\n  emit('change', bratOnto.value)\n  // var selectionRange = window.getSelection()?.getRangeAt(0);\n  // var selectedText = selectionRange?.extractContents();\n  // var span = document.createElement(\"span\");\n  // span.style.backgroundColor = \"yellow\";\n  // span.appendChild(selectedText!);\n  // selectionRange?.insertNode(span);\n}\n\n// function onBlur() {\n//   searchTerm.value = ''\n//   matches.value = []\n//   cords.value = { x: -1000, y: 0, start: -1, end: -1 }\n// }\n\nfunction checkSelection(e: any) {\n  searchTerm.value = ''\n  if (window.getSelection) {\n    var selection = window.getSelection()\n    console.log(selection)\n    searchTerm.value = selection?.toString()!\n    if (searchTerm.value && searchTerm.value != '') {\n      matches.value = []\n      cords.value = { x: -1000, y: 0, start: -1, end: -1 }\n      getSelectionCoords(selection)\n      getSelectOptions(e)\n    } else {\n      cords.value = { x: -1000, y: 0, start: -1, end: -1 }\n      matches.value = []\n    }\n  }\n}\n\nfunction highlight(content: string) {\n  if (!searchTerm.value) {\n    return content\n  }\n  return content.replace(new RegExp(searchTerm.value, 'gi'), (match) => {\n    return '<span class=\"highlightText\">' + match + '</span>'\n  })\n}\n\nfunction getSelectionCoords(sel: any, atStart: boolean = true) {\n  if (!sel?.rangeCount) return null\n  let range = sel.getRangeAt(0).cloneRange()\n  console.log(range.getClientRects())\n  if (!range.getClientRects) return null\n  range.collapse(atStart)\n  let rects = range.getClientRects()\n  if (rects.length <= 0){\n    cords.value.x = 0\n    cords.value.y = 0\n  }else{\n    let rect = rects[0]\n    cords.value.start = sel.anchorOffset\n    cords.value.end = sel.focusOffset\n    cords.value.x = rect.x\n    cords.value.y = rect.y + rects[0]?.height\n  }\n}\n\nasync function getSelectOptions(event: any) {\n  if (searchTerm.value === '') {\n    matches.value = []\n    return []\n  }\n  let ontologiesExists = searchTerm.value.indexOf(':')\n  let ontologies = ''\n  let term = null\n  if (ontologiesExists < 0) {\n    ontologies = props.ontologies\n    term = searchTerm.value\n  } else {\n    term = searchTerm.value.split(':')[1]\n    ontologies = searchTerm.value.split(':')[0]\n  }\n\n  const ele = event.currentTarget\n  const previousController = pendingRequests.get(ele)\n\n  if (previousController) {\n    previousController.abort()\n  }\n\n  const controller = new AbortController()\n  pendingRequests.set(ele, controller)\n\n  const url = 'https://service.tib.eu/ts4tib/api/select?q='\n  const queries = encodeURI(\n    '&ontology=' +\n      ontologies +\n      '&fieldList=iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type&obsoletes=false&local=false&rows=10'\n  )\n\n  loading.value = true\n\n  let response = (await fetch(`${url}${term}${queries}`, { signal: controller.signal })).json()\n\n  response.then((body) => {\n    pendingRequests.delete(ele)\n    matches.value = body.response.docs\n    loading.value = false\n  })\n}\n</script>\n<style scoped>\n.vc_textarea {\n  min-height: 100px;\n  width: 100%;\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border-box;\n  padding: 12px 45px 12px 10px;\n  width: 100%;\n}\n\n#mainInput {\n  background: transparent;\n  color: black;\n  opacity: 1;\n}\n\n.contextmenu {\n  position: absolute;\n  background: #ffffff;\n  color: #000;\n  margin-top: 5px;\n  border: 1px solid #f1f1f2;\n  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.2);\n  border-radius: 0.2rem;\n  width: 15rem;\n  max-width: calc(100vw - 2rem);\n  max-height: 300px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  z-index: 100;\n}\n\n.contextmenu .contextmenu-item {\n  border-bottom: 1px solid #c3c3c3;\n  padding: 8px;\n}\n\n.contextmenu .contextmenu-item:hover {\n  cursor: pointer;\n  background-color: #f1f1f2;\n}\n\n.contextmenu .contextmenu-item p {\n  margin: 0;\n  padding: 0;\n}\n\n.contextmenu .contextmenu-item .iri {\n  margin: 0;\n  width: 15rem;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  padding: 0;\n}\n</style>\n","<template>\n  <div>\n    <label v-if=\"label\">{{ label }}</label>\n    <div>\n      <textarea\n        v-model=\"autocompleteText\"\n        id=\"autocomplete\"\n        type=\"text\"\n        class=\"vc_textarea\"\n        line=\"10\"\n      ></textarea>\n      <textarea\n        id=\"mainInput\"\n        @keyup.stop=\"processInput\"\n        @change.stop=\"propogateData\"\n        v-model=\"inputText\"\n        type=\"text\"\n        class=\"vc_textarea\"\n      ></textarea>\n    </div>\n    <p v-if=\"info && matches.length == 0\">{{ info }}</p>\n    <span v-if=\"currentMatchedOntologyTerm\">\n      <code>\n        <pre>{{ currentMatchedOntologyTermValue }}</pre>\n      </code>\n    </span>\n    <span v-if=\"annotatedTerms && annotatedTerms.length > 0\">\n      <code>\n        <pre>{{ bratOnto }}</pre>\n      </code>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed } from \"vue\";\n\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  info: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  format: {\n    type: String,\n    required: false,\n    default: \"text\",\n  },\n});\n\nlet inputText = ref(\"\");\nlet autocompleteText = ref(\"\");\nlet typingTimer = -1;\nlet doneTypingInterval = 100;\nlet currentMatchIndex = 0;\nlet matches = ref([]);\nlet lastW = \"\";\nlet last2W = \"\";\nlet queryLastTwoTerms = false;\nlet annotatedTerms: any = ref([]);\nlet annotatedTermsJSON: any = ref([]);\nlet currentMatchedOntologyTerm: any = ref(null);\n\nconst currentMatchedOntologyTermValue = computed(() => {\n  if (!currentMatchedOntologyTerm.value) {\n    return null;\n  }\n\n  return currentMatchedOntologyTerm.value\n    ? currentMatchedOntologyTerm.value[\"label\"] +\n        \"\\t\" +\n        currentMatchedOntologyTerm.value[\"ontology_prefix\"] +\n        \"\\t\" +\n        currentMatchedOntologyTerm.value[\"iri\"] +\n        \"\\t\" +\n        currentMatchedOntologyTerm.value[\"type\"]\n    : \"\";\n});\n\nconst emit = defineEmits([\"change\"]);\n\nconst bratOnto = computed(() => {\n  if (!inputText.value) {\n    return null;\n  }\n  if (props.format && props.format == \"json\") {\n    return {\n      text: inputText.value,\n      ontology: annotatedTerms.value,\n    };\n  } else {\n    return inputText.value + \"\\n$$$$\\n\" + annotatedTerms.value.join(\"\\n\");\n  }\n});\n\nasync function processInput(e: any) {\n  if (inputText.value == \"\") {\n    autocompleteText.value = \"\";\n    return;\n  }\n\n  if (typingTimer > -1) {\n    clearTimeout(typingTimer);\n  }\n\n  if (e.key == \"ArrowDown\") {\n    if (currentMatchIndex == 9) {\n      reset();\n    }\n    currentMatchIndex += 1;\n    updateAutoCompleteText();\n    e.preventDefault();\n    return;\n  } else if (e.key == \"ArrowUp\") {\n    if (currentMatchIndex == 0) {\n      reset();\n    }\n    currentMatchIndex -= 1;\n    updateAutoCompleteText();\n    e.preventDefault();\n    return;\n  } else if (e.key == \"ArrowRight\") {\n    e.preventDefault();\n    tabkeyPressed();\n  } else {\n    if (inputText.value) {\n      let wordsArray = inputText.value.split(\" \");\n      if (wordsArray.length > 1) {\n        lastW = wordsArray.slice(-1)[0];\n        last2W = wordsArray.slice(-2).join(\" \");\n      } else {\n        lastW = wordsArray[0];\n        last2W = lastW;\n      }\n      if (lastW == \"\") {\n        queryLastTwoTerms = false;\n        currentMatchedOntologyTerm.value = null;\n        autocompleteText.value = inputText.value;\n      }\n      if (queryLastTwoTerms) {\n        lastW = last2W;\n      }\n      searchDB();\n    }\n  }\n}\n\nfunction propogateData() {\n  emit(\"change\", bratOnto.value);\n}\n\nfunction reset() {\n  queryLastTwoTerms = true;\n  lastW = last2W;\n  currentMatchIndex = 0;\n  searchDB();\n}\n\nfunction searchDB() {\n  typingTimer = setTimeout(function () {\n    CallMLDataSetAPI();\n  }, doneTypingInterval);\n}\n\nfunction tabkeyPressed() {\n  inputText.value = autocompleteText.value;\n  annotatedTerms.value.push(currentMatchedOntologyTermValue.value);\n  annotatedTermsJSON.value.push(currentMatchedOntologyTerm.value);\n}\n\nasync function CallMLDataSetAPI() {\n  //call api and get response\n  const url = \"https://service.tib.eu/ts4tib/api/select?q=\";\n  const queries = encodeURI(\"&obsoletes=false&local=false&rows=10\");\n\n  let response = (await fetch(`${url}${lastW}${queries}`)).json();\n  response.then((body) => {\n    matches.value = body.response.docs;\n    if (matches.value.length > 0) {\n      currentMatchIndex = 0;\n      updateAutoCompleteText();\n    }\n  });\n}\n\nfunction updateAutoCompleteText() {\n  let matchedTerm = \"\";\n  if (currentMatchedOntologyTerm.value) {\n    currentMatchedOntologyTerm.value = matches.value[currentMatchIndex];\n    matchedTerm = currentMatchedOntologyTerm.value[\"label\"];\n    let term = matchedTerm.toLowerCase().replace(lastW, \"\");\n    if (term != undefined) {\n      autocompleteText.value = inputText.value + term;\n    }\n  }\n}\n</script>\n<style scoped>\n.vc_textarea {\n  min-height: 100px;\n  width: 100%;\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border-box;\n  padding: 12px 45px 12px 10px;\n  width: 100%;\n}\n\n#mainInput {\n  background: transparent;\n  color: black;\n  opacity: 100;\n}\n\n#autocomplete {\n  opacity: 0.6;\n  background: transparent;\n  position: absolute;\n  box-sizing: border-box;\n  cursor: text;\n  pointer-events: none;\n  color: black;\n  opacity: 0.6;\n  background: transparent;\n}\n</style>\n","import { defineCustomElement } from 'vue'\nimport VueOntologyAnnotation from './components/ontology-annotation.ce.vue'\nimport VueOntologyAutoComplete from './components/ontology-autocomplete.ce.vue'\nimport VueOntologyAnnotate from './components/ontology-annotate.ce.vue'\nimport VueOntologyCompose from './components/ontology-compose.ce.vue'\n\nexport const OntologyAnnotation = defineCustomElement(VueOntologyAnnotation)\nexport const OntologyAutoComplete = defineCustomElement(VueOntologyAutoComplete)\nexport const OntologyAnnotate = defineCustomElement(VueOntologyAnnotate)\nexport const OntologyCompose = defineCustomElement(VueOntologyCompose)\n\ncustomElements.define('ontology-annotation', OntologyAnnotation)\ncustomElements.define('ontology-autocomplete', OntologyAutoComplete)\ncustomElements.define('ontology-annotate', OntologyAnnotate)\ncustomElements.define('ontology-compose', OntologyCompose)\n\n"],"names":["term","computed","props","iri","source","searchTerm","ref","matches","getSelectOptions","ontologiesExists","ontologies","url","queries","body","highlight","content","match","concat","data","selectedTerm","selectedValue","selectTerm","emit","bratOnto","selectedTerms","t","loading","reactive","pendingRequests","cords","onInput","e","doc","checkSelection","selection","getSelectionCoords","sel","atStart","range","rects","rect","event","ele","previousController","controller","inputText","autocompleteText","typingTimer","doneTypingInterval","currentMatchIndex","lastW","last2W","queryLastTwoTerms","annotatedTerms","annotatedTermsJSON","currentMatchedOntologyTerm","currentMatchedOntologyTermValue","processInput","reset","updateAutoCompleteText","tabkeyPressed","wordsArray","searchDB","propogateData","CallMLDataSetAPI","matchedTerm","OntologyAnnotation","defineCustomElement","VueOntologyAnnotation","OntologyAutoComplete","VueOntologyAutoComplete","OntologyAnnotate","VueOntologyAnnotate","OntologyCompose","VueOntologyCompose"],"mappings":"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"}