{"version":3,"file":"index.cjs","sources":["../src/components/ontology-term-annotation.ce.vue","../src/components/ontology-text-annotation.ce.vue","../src/components/ontology-autocomplete.ce.vue","../src/components/ontology-annotate.ce.vue","../src/components/ontology-compose.ce.vue","../src/OntologyElements.js"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nconst props = defineProps<{\n  annotation?: string\n}>()\n\nconst term = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[0] : ''\n})\nconst iri = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[2] : ''\n})\nconst source = computed(() => {\n  return props.annotation ? props.annotation.split('\\t')[1] : ''\n})\n</script>\n<template>\n  <a v-if=\"annotation && annotation != ''\" :href=\"iri\" target=\"_blank\">\n    {{ source }}: {{ term }}\n  </a>\n</template>\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nconst props = defineProps<{\n  annotation?: string\n}>()\n\nconst content = computed(() => {\n  return props.annotation ? props.annotation.split('$$$$')[0] : ''\n})\n\nconst contentHTML = computed(() => {\n  let _content = `${content.value}`\n  let annotatedTerms = props.annotation\n    ? props.annotation\n        .split('$$$$')[1]\n        .split(/\\r?\\n/)\n        .filter((n) => n)\n    : []\n  let terms: any[] = []\n  annotatedTerms.forEach((annotation) => {\n    let annotationDetails = annotation.split('\\t')\n    let indexes = annotationDetails[1].split(' ')\n    let _term: any = {}\n    _term['value'] = _content.substring(parseInt(indexes[1]), parseInt(indexes[2]))\n    _term['class'] = annotationDetails[0]\n    _term['ontology'] = indexes[0]\n    _term['ontology_term'] = annotationDetails[2]\n    _term['iri'] = annotationDetails[3]\n    terms.push(_term)\n  })\n  terms.forEach((term) => {\n    _content = _content.replace(\n      term.value,\n      '<span class=\"o_term\"><a target=\"_blank\" href=' + term.iri + '>' + term.value + '</a></span>'\n    )\n  })\n  return _content\n})\n</script>\n<template>\n  <div v-html=\"contentHTML\"></div>\n</template>\n<style scoped>\n.o_term {\n  background-color: #cdcdcd;\n  border-radius: 4px;\n  padding: 1px 3px;\n}\n</style>\n","<template>\n  <div class=\"auto-search-wrapper\">\n    <label v-if=\"label\">{{ label }}</label>\n    <input\n      type=\"text\"\n      id=\"search\"\n      v-model=\"searchTerm\"\n      @input.stop=\"getSelectOptions\"\n      :placeholder=\"placeholder\"\n      :class=\"styling\"\n      autocomplete=\"off\"\n    />\n    <p v-if=\"info && matches.length == 0\">{{ info }}</p>\n    <div v-else class=\"auto-results-wrapper auto-is-active\">\n      <ul tabindex=\"0\" role=\"listbox\">\n        <li\n          v-for=\"doc in matches\"\n          :key=\"doc['short_label']\"\n          role=\"option\"\n          tabindex=\"-1\"\n          aria-selected=\"false\"\n          aria-setsize=\"3\"\n          aria-posinset=\"0\"\n          @click=\"selectTerm(doc)\"\n        >\n          <p v-html=\"highlight(doc['label'])\"></p>\n          <p><small v-html=\"concat(doc['description'])\"></small></p>\n          <small>{{ doc['ontology_prefix'] }}:{{ doc['iri'] }}</small>\n        </li>\n      </ul>\n    </div>\n    <button\n      v-if=\"searchTerm != '' && matches.length > 0\"\n      type=\"button\"\n      aria-label=\"clear the search query\"\n    ></button>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed, watch, onMounted } from 'vue'\n\nconst emit = defineEmits(['change'])\n\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  info: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  ontologies: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  value: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  styling: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  format: {\n    type: String,\n    required: false,\n    default: 'text'\n  }\n})\n\nconst selectTerm = (term: any) => {\n  if(term == \"\"){\n    selectedTerm.value = null\n    searchTerm.value = \"\"\n  }else{\n    selectedTerm.value = term\n    searchTerm.value = term.label\n    emit('change', selectedValue.value)\n    matches.value = []\n  }\n}\n\nlet searchTerm = ref('')\nlet matches = ref([])\nlet selectedTerm = ref(null)\n\nconst selectedValue = computed(() => {\n  if (!selectedTerm.value) {\n    return null\n  }\n  if (props.format && props.format == 'json') {\n    return selectedTerm.value\n  } else {\n    return selectedTerm.value\n      ? selectedTerm.value['label'] +\n          '\\t' +\n          selectedTerm.value['ontology_prefix'] +\n          '\\t' +\n          selectedTerm.value['iri'] +\n          '\\t' +\n          selectedTerm.value['type']\n      : ''\n  }\n})\n\nwatch(\n  () => props.value,\n  (newValue, oldValue) => {\n    selectTerm(composeOntologyObject(newValue))\n  }\n)\n\nonMounted(() => {\n  if (props.value != '') {\n    selectTerm(composeOntologyObject(props.value))\n  }\n})\n\nasync function getSelectOptions() {\n  if (searchTerm.value === '') {\n    matches.value = []\n    return []\n  }\n  let ontologiesExists = searchTerm.value.indexOf(':')\n  let ontologies = ''\n  let term = null\n  if (ontologiesExists < 0) {\n    ontologies = props.ontologies\n    term = searchTerm.value\n  } else {\n    term = searchTerm.value.split(':')[1]\n    ontologies = searchTerm.value.split(':')[0]\n  }\n\n  const url = 'https://service.tib.eu/ts4tib/api/select?q='\n  const queries = encodeURI(\n    '&ontology=' +\n      ontologies +\n      '&fieldList=iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type&obsoletes=false&local=false&rows=10'\n  )\n\n  let response = (await fetch(`${url}${term}${queries}`)).json()\n  response.then((body) => {\n    matches.value = body.response.docs\n  })\n}\n\nfunction highlight(content: string) {\n  if (!searchTerm.value) {\n    return content\n  }\n  return content.replace(new RegExp(searchTerm.value, 'gi'), (match) => {\n    return '<span class=\"highlightText\">' + match + '</span>'\n  })\n}\n\nfunction composeOntologyObject(content: string) {\n  if (!content || content == '') {\n    return \"\"\n  }\n  const data = content.split('\\t')\n  let _ontologyObject = {\n    label: data[0],\n    iri: data[2],\n    ontology_prefix: data[1],\n    type: data[3]\n  }\n  return _ontologyObject\n}\n\nfunction concat(data: Array<[]>) {\n  return data ? data.join('') : ''\n}\n</script>\n\n<style scoped>\n:root {\n  --close-button: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M18.984 6.422 13.406 12l5.578 5.578-1.406 1.406L12 13.406l-5.578 5.578-1.406-1.406L10.594 12 5.016 6.422l1.406-1.406L12 10.594l5.578-5.578z'/%3E%3C/svg%3E\");\n  --loupe-icon: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23929292' d='M16.041 15.856a.995.995 0 0 0-.186.186A6.97 6.97 0 0 1 11 18c-1.933 0-3.682-.782-4.95-2.05S4 12.933 4 11s.782-3.682 2.05-4.95S9.067 4 11 4s3.682.782 4.95 2.05S18 9.067 18 11a6.971 6.971 0 0 1-1.959 4.856zm5.666 4.437-3.675-3.675A8.967 8.967 0 0 0 20 11c0-2.485-1.008-4.736-2.636-6.364S13.485 2 11 2 6.264 3.008 4.636 4.636 2 8.515 2 11s1.008 4.736 2.636 6.364S8.515 20 11 20a8.967 8.967 0 0 0 5.618-1.968l3.675 3.675a.999.999 0 1 0 1.414-1.414z'/%3E%3C/svg%3E\");\n}\n\n.auto-search-wrapper {\n  display: block;\n  position: relative;\n  width: 100%;\n}\n\n.auto-search-wrapper p {\n  margin: 0;\n  padding: 0;\n  font-size: 1.1em;\n}\n\n.auto-search-wrapper p .highlightText {\n  font-weight: bold;\n}\n\n.auto-search-wrapper input {\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border-box;\n  font-size: 16px;\n  padding: 12px 45px 12px 10px;\n  width: 100%;\n}\n\n.auto-search-wrapper input:focus {\n  border: 1px solid #858585;\n  outline: none;\n}\n\n.auto-search-wrapper input::-ms-clear {\n  display: none;\n}\n\n.auto-search-wrapper ul {\n  list-style: none;\n  margin: 0;\n  overflow: auto;\n  padding: 0;\n}\n\n.auto-search-wrapper ul li {\n  cursor: pointer;\n  margin: 0;\n  overflow: hidden;\n  padding: 10px;\n  position: relative;\n  border: 1px dotted #f1f1f2;\n}\n\n.auto-search-wrapper ul li:hover {\n  background-color: #f1f1f2;\n}\n\n.auto-search-wrapper ul li:not(:last-child) {\n  border-top: none;\n}\n\n.auto-search-wrapper ul li[disabled] {\n  background: #ececec;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.auto-search-wrapper .auto-expanded {\n  border: 1px solid #858585;\n  outline: none;\n}\n\n.auto-search-wrapper.loupe:before {\n  filter: invert(60%);\n}\n\n.auto-is-loading:after {\n  animation: auto-spinner 0.6s linear infinite;\n  border-color: #d9d9d9 grey grey #d9d9d9;\n  border-radius: 50%;\n  border-style: solid;\n  border-width: 2px;\n  bottom: 0;\n  box-sizing: border-box;\n  content: '';\n  height: 20px;\n  margin: auto;\n  position: absolute;\n  right: 10px;\n  top: 0;\n  width: 20px;\n}\n\n.auto-is-loading .auto-clear {\n  display: none;\n}\n\n@keyframes auto-spinner {\n  to {\n    transform: rotate(1turn);\n  }\n}\n\nli.loupe:before {\n  bottom: auto;\n  top: 15px;\n}\n\n.loupe input {\n  padding: 12px 45px 12px 35px;\n}\n\n.loupe:before {\n  background-image: var(--loupe-icon);\n  bottom: 0;\n  content: '';\n  height: 17px;\n  left: 10px;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  width: 17px;\n}\n\n.auto-selected:before {\n  opacity: 1;\n}\n\n.auto-clear {\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  bottom: 0;\n  cursor: pointer;\n  display: flex;\n  height: auto;\n  justify-content: center;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 40px;\n}\n\n.auto-clear:before {\n  content: var(--close-button);\n  height: 24px;\n  line-height: 100%;\n  width: 24px;\n}\n\n.auto-clear span {\n  display: none;\n}\n\n.auto-results-wrapper {\n  background-color: #fff;\n  border: 1px solid #858585;\n  border-top: none;\n  box-sizing: border-box;\n  display: none;\n  overflow: hidden;\n}\n\n.auto-results-wrapper ul > .loupe {\n  padding-left: 40px;\n}\n\n.auto-results-wrapper.auto-is-active {\n  display: block;\n  margin-top: -1px;\n  position: absolute;\n  width: 100%;\n  z-index: 99999;\n}\n\n.auto-selected {\n  background-color: #e6e6e6;\n}\n\n.auto-selected + li:before {\n  border-top: none;\n}\n\n.auto-error {\n  border: 1px solid #ff3838;\n}\n\n.auto-error::placeholder {\n  color: #f66;\n  opacity: 1;\n}\n\n.hidden {\n  display: none;\n}\n</style>\n","<template>\n  <div :id=\"'o_annotate_wrapper_' + reference\" class=\"o_annotate_wrapper\">\n    <label class=\"o_annotate_label\" v-if=\"label\">{{ label }}</label>\n    <div v-if=\"!hasShadowDOM\">\n      <div\n        @mouseup=\"checkSelection\"\n        @keyup=\"checkSelection\"\n        @input=\"onInput\"\n        class=\"o_annotate_textarea\"\n        ref=\"o_annotate_div\"\n        contenteditable=\"true\"\n      >\n        {{ content }}\n      </div>\n    </div>\n    <div v-else>\n      <textarea\n        ref=\"o_annotate_textarea\"\n        @mouseup=\"checkSelection\"\n        @keyup=\"checkSelection\"\n        @input=\"onInput\"\n        class=\"o_annotate_textarea\"\n        >{{ content }}</textarea\n      >\n    </div>\n    <div v-if=\"searchTerm != ''\" class=\"contextmenu\" :style=\"context_menu_styling\">\n      <div class=\"contextmenu_item\" v-if=\"matches.length == 0 && !loading\">No matches found</div>\n      <div v-else>\n        <div\n          class=\"contextmenu_item\"\n          v-for=\"doc in matches\"\n          :key=\"doc['short_label']\"\n          role=\"option\"\n          tabindex=\"_1\"\n          aria_selected=\"false\"\n          aria_setsize=\"3\"\n          aria_posinset=\"0\"\n          @click.capture.stop.prevent=\"selectTerm(doc)\"\n        >\n          <p v-html=\"doc['label']\"></p>\n          <small>{{ doc['ontology_prefix'] }}:{{ doc['short_form'] }}</small>\n        </div>\n      </div>\n    </div>\n    <div>\n      <div v-if=\"loading\" style=\"float: right\">\n        <i>...loading</i>\n      </div>\n      <div>\n        <span v-if=\"info\">{{ info }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, computed, reactive, onMounted, type HtmlHTMLAttributes } from 'vue'\n\nconst reference = (Math.random() + 1).toString(36).substring(7)\nconst o_annotate_textarea = ref<HTMLTextAreaElement | null>(null)\nconst hasShadowDOM = ref(false)\nconst emit = defineEmits(['change'])\nlet content = ref('')\nlet cords: any = ref({ x: -1000, y: 0, start: -1, end: -1 })\nlet searchTerm = ref('')\nlet loading = ref(false)\nlet matches = ref([])\ntype OntologyType = {\n  ontology: any\n  context: any\n}\nlet selectedTerms: Array<OntologyType> = reactive([])\nconst pendingRequests = new WeakMap()\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  info: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  ontologies: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  format: {\n    type: String,\n    required: false,\n    default: 'text'\n  }\n})\n\nconst context_menu_styling = computed(() => {\n  return 'left:' + cords.value.x + 'px; top:' + cords.value.y + 'px'\n})\n\nconst bratOnto = computed(() => {\n  let _content = hasShadowDOM ? o_annotate_textarea.value?.value : content.value\n  if (!_content) {\n    return null\n  }\n  if (props.format && props.format == 'json') {\n    return {\n      text: _content,\n      ontology: selectedTerms\n    }\n  } else {\n    return (\n      _content +\n      '\\n$$$$\\n' +\n      selectedTerms\n        .map(\n          (t) =>\n            t.ontology['type'][0] +\n            '\\t' +\n            t.ontology['ontology_prefix'] +\n            ' ' +\n            t.context['start'] +\n            ' ' +\n            t.context['end'] +\n            '\\t' +\n            t.ontology['label'] +\n            '\\t' +\n            t.ontology['iri']\n        )\n        .join('\\n')\n    )\n  }\n})\n\nonMounted(() => {\n  var el = document.getElementsByTagName('ontology-annotate')[0]\n  if (!!el?.shadowRoot) {\n    hasShadowDOM.value = true\n  }\n})\n\nfunction onInput(e: any) {\n  content.value = e.target.innerText\n  emit('change', bratOnto.value)\n}\n\nfunction selectTerm(doc: any) {\n  let data = {\n    ontology: {},\n    context: {}\n  }\n  if (!hasShadowDOM) {\n    data = { ontology: doc, context: cords.value }\n  } else {\n    if (o_annotate_textarea) {\n      let _cords = {\n        x: 0,\n        y: 0,\n        start: o_annotate_textarea.value?.selectionStart,\n        end: o_annotate_textarea.value?.selectionEnd\n      }\n      data = { ontology: doc, context: _cords }\n    }\n  }\n  selectedTerms.push(data)\n  matches.value = []\n  searchTerm.value = ''\n  emit('change', bratOnto.value)\n}\n\nfunction checkSelection(e: any) {\n  searchTerm.value = ''\n  if (window.getSelection) {\n    var selection = window.getSelection()\n    searchTerm.value = selection?.toString()!\n    if (searchTerm.value && searchTerm.value != '') {\n      matches.value = []\n      getSelectionCoords(selection)\n      getSelectOptions(e)\n    } else {\n      cords.value = { x: -1000, y: 0, start: -1, end: -1 }\n      matches.value = []\n    }\n  }\n}\n\nfunction getSelectionCoords(sel: any, atStart: boolean = true) {\n  if (!sel?.rangeCount) return null\n  let range = sel.getRangeAt(0).cloneRange()\n  if (!range.getClientRects) return null\n  range.collapse(atStart)\n  let rects = range.getClientRects()\n  if (rects.length <= 0) {\n    cords.value.x = 0\n    cords.value.y = 0\n  } else {\n    let rect = rects[0]\n    cords.value.start = sel.anchorOffset\n    cords.value.end = sel.focusOffset\n    cords.value.x = rect.x\n    cords.value.y = rect.y + rects[0]?.height\n  }\n}\n\nasync function getSelectOptions(event: any) {\n  if (searchTerm.value === '') {\n    matches.value = []\n    return []\n  }\n  let ontologiesExists = searchTerm.value.indexOf(':')\n  let ontologies = ''\n  let term = null\n  if (ontologiesExists < 0) {\n    ontologies = props.ontologies\n    term = searchTerm.value\n  } else {\n    term = searchTerm.value.split(':')[1]\n    ontologies = searchTerm.value.split(':')[0]\n  }\n\n  const ele = event.currentTarget\n  const previousController = pendingRequests.get(ele)\n\n  if (previousController) {\n    previousController.abort()\n  }\n\n  const controller = new AbortController()\n  pendingRequests.set(ele, controller)\n\n  const url = 'https://service.tib.eu/ts4tib/api/select?q='\n  const queries = encodeURI(\n    '&ontolog-y=' +\n      ontologies +\n      '&fieldList=iri,label,short_form,obo_id,ontology_name,ontology_prefix,description,type&obsoletes=false&local=false&rows=10'\n  )\n\n  loading.value = true\n\n  let response = (await fetch(`${url}${term}${queries}`, { signal: controller.signal })).json()\n\n  response.then((body) => {\n    pendingRequests.delete(ele)\n    matches.value = body.response.docs\n    loading.value = false\n  })\n}\n</script>\n<style scoped>\n.o_annotate_textarea {\n  min-height: 100px;\n  width: 100%;\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border_box;\n  padding: 12px 10px 12px 10px;\n  resize: none;\n}\n\n#mainInput {\n  background: transparent;\n  color: black;\n  opacity: 1;\n}\n\n.contextmenu {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: #ffffff;\n  color: #000;\n  border: 1px solid #f1f1f2;\n  width: 15rem;\n  max-width: calc(100vw _ 2rem);\n  max-height: 300px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  z-index: 100;\n  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.2);\n  border-radius: 0.2rem;\n}\n\n.contextmenu .contextmenu_item {\n  border-bottom: 1px solid #c3c3c3;\n  padding: 8px;\n}\n\n.contextmenu .contextmenu_item:hover {\n  cursor: pointer;\n  background-color: #f1f1f2;\n}\n\n.contextmenu .contextmenu_item p {\n  margin: 0;\n  padding: 0;\n}\n\n.contextmenu .contextmenu_item .iri {\n  margin: 0;\n  width: 15rem;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  word-wrap: break_word;\n  padding: 0;\n}\n</style>\n","<template>\n  <div>\n    <label v-if=\"label\">{{ label }}</label>\n    <div>\n      <textarea\n        v-model=\"autocompleteText\"\n        id=\"autocomplete\"\n        type=\"text\"\n        class=\"o_annotate_textarea\"\n        line=\"10\"\n      ></textarea>\n      <textarea\n        id=\"mainInput\"\n        @keyup.stop=\"processInput\"\n        @change.stop=\"propogateData\"\n        v-model=\"inputText\"\n        type=\"text\"\n        class=\"o_annotate_textarea\"\n      ></textarea>\n    </div>\n    <p v-if=\"info && matches.length == 0\">{{ info }}</p>\n    <span v-if=\"currentMatchedOntologyTerm\">\n      <code>\n        <pre>{{ currentMatchedOntologyTermValue }}</pre>\n      </code>\n    </span>\n    <span v-if=\"annotatedTerms && annotatedTerms.length > 0\">\n      <code>\n        <pre>{{ bratOnto }}</pre>\n      </code>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n  label: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  info: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  format: {\n    type: String,\n    required: false,\n    default: 'text'\n  }\n})\n\nlet inputText = ref('')\nlet autocompleteText = ref('')\nlet typingTimer = -1\nlet doneTypingInterval = 100\nlet currentMatchIndex = 0\nlet matches = ref([])\nlet lastW = ''\nlet last2W = ''\nlet queryLastTwoTerms = false\nlet annotatedTerms: any = ref([])\nlet annotatedTermsJSON: any = ref([])\nlet currentMatchedOntologyTerm: any = ref(null)\n\nconst currentMatchedOntologyTermValue = computed(() => {\n  if (!currentMatchedOntologyTerm.value) {\n    return null\n  }\n\n  return currentMatchedOntologyTerm.value\n    ? currentMatchedOntologyTerm.value['label'] +\n        '\\t' +\n        currentMatchedOntologyTerm.value['ontology_prefix'] +\n        '\\t' +\n        currentMatchedOntologyTerm.value['iri'] +\n        '\\t' +\n        currentMatchedOntologyTerm.value['type']\n    : ''\n})\n\nconst emit = defineEmits(['change'])\n\nconst bratOnto = computed(() => {\n  if (!inputText.value) {\n    return null\n  }\n  if (props.format && props.format == 'json') {\n    return {\n      text: inputText.value,\n      ontology: annotatedTerms.value\n    }\n  } else {\n    return inputText.value + '\\n$$$$\\n' + annotatedTerms.value.join('\\n')\n  }\n})\n\nasync function processInput(e: any) {\n  if (inputText.value == '') {\n    autocompleteText.value = ''\n    return\n  }\n\n  if (typingTimer > -1) {\n    clearTimeout(typingTimer)\n  }\n\n  if (e.key == 'ArrowDown') {\n    if (currentMatchIndex == 9) {\n      reset()\n    }\n    currentMatchIndex += 1\n    updateAutoCompleteText()\n    e.preventDefault()\n    return\n  } else if (e.key == 'ArrowUp') {\n    if (currentMatchIndex == 0) {\n      reset()\n    }\n    currentMatchIndex -= 1\n    updateAutoCompleteText()\n    e.preventDefault()\n    return\n  } else if (e.key == 'ArrowRight') {\n    e.preventDefault()\n    tabkeyPressed()\n  } else {\n    if (inputText.value) {\n      let wordsArray = inputText.value.split(' ')\n      if (wordsArray.length > 1) {\n        lastW = wordsArray.slice(-1)[0]\n        last2W = wordsArray.slice(-2).join(' ')\n      } else {\n        lastW = wordsArray[0]\n        last2W = lastW\n      }\n      if (lastW == '') {\n        queryLastTwoTerms = false\n        currentMatchedOntologyTerm.value = null\n        autocompleteText.value = inputText.value\n      }\n      if (queryLastTwoTerms) {\n        lastW = last2W\n      }\n      searchDB()\n    }\n  }\n}\n\nfunction propogateData() {\n  emit('change', bratOnto.value)\n}\n\nfunction reset() {\n  queryLastTwoTerms = true\n  lastW = last2W\n  currentMatchIndex = 0\n  searchDB()\n}\n\nfunction searchDB() {\n  typingTimer = setTimeout(function () {\n    CallMLDataSetAPI()\n  }, doneTypingInterval)\n}\n\nfunction tabkeyPressed() {\n  inputText.value = autocompleteText.value\n  annotatedTerms.value.push(currentMatchedOntologyTermValue.value)\n  annotatedTermsJSON.value.push(currentMatchedOntologyTerm.value)\n}\n\nasync function CallMLDataSetAPI() {\n  const url = 'https://service.tib.eu/ts4tib/api/select?q='\n  const queries = encodeURI('&obsoletes=false&local=false&rows=10')\n\n  let response = (await fetch(`${url}${lastW}${queries}`)).json()\n  response.then((body) => {\n    matches.value = body.response.docs\n    if (matches.value.length > 0) {\n      currentMatchIndex = 0\n      updateAutoCompleteText()\n    }\n  })\n}\n\nfunction updateAutoCompleteText() {\n  let matchedTerm = ''\n  currentMatchedOntologyTerm.value = matches.value[currentMatchIndex]\n  matchedTerm = currentMatchedOntologyTerm.value['label']\n  let term = matchedTerm.toLowerCase().replace(lastW, '')\n  if (term != undefined) {\n    autocompleteText.value = inputText.value + term\n  }\n}\n</script>\n<style scoped>\n.o_annotate_textarea {\n  min-height: 100px;\n  width: 100%;\n  border: 1px solid #d7d7d7;\n  box-shadow: none;\n  box-sizing: border-box;\n  padding: 12px 10px 12px 10px;\n  resize: none;\n}\n\n#mainInput {\n  background: transparent;\n  color: black;\n  opacity: 100;\n}\n\n#autocomplete {\n  opacity: 0.6;\n  background: transparent;\n  position: absolute;\n  box-sizing: border-box;\n  cursor: text;\n  pointer-events: none;\n  color: black;\n  opacity: 0.6;\n  background: transparent;\n}\n</style>\n","import { defineCustomElement } from 'vue'\nimport VueOntologyTermAnnotation from './components/ontology-term-annotation.ce.vue'\nimport VueOntologyTextAnnotation from './components/ontology-text-annotation.ce.vue'\nimport VueOntologyAutoComplete from './components/ontology-autocomplete.ce.vue'\nimport VueOntologyAnnotate from './components/ontology-annotate.ce.vue'\nimport VueOntologyCompose from './components/ontology-compose.ce.vue'\n\nexport const OntologyTermAnnotation = defineCustomElement(VueOntologyTermAnnotation)\nexport const OntologyTextAnnotation = defineCustomElement(VueOntologyTextAnnotation)\nexport const OntologyAutoComplete = defineCustomElement(VueOntologyAutoComplete)\nexport const OntologyAnnotate = defineCustomElement(VueOntologyAnnotate)\nexport const OntologyCompose = defineCustomElement(VueOntologyCompose)\n\nif (typeof window !== 'undefined') {\n  let customElementRegistry = window.customElements\n  customElementRegistry.define('ontology-term-annotation', OntologyTermAnnotation)\n  customElementRegistry.define('ontology-text-annotation', OntologyTextAnnotation)\n  customElementRegistry.define('ontology-autocomplete', OntologyAutoComplete)\n  customElementRegistry.define('ontology-annotate', OntologyAnnotate)\n  customElementRegistry.define('ontology-compose', OntologyCompose)\n}\n"],"names":["term","computed","props","iri","source","content","contentHTML","_content","annotatedTerms","n","terms","annotation","annotationDetails","indexes","_term","selectTerm","selectedTerm","searchTerm","emit","selectedValue","matches","ref","watch","newValue","oldValue","composeOntologyObject","onMounted","getSelectOptions","ontologiesExists","ontologies","url","queries","body","highlight","match","data","concat","reference","o_annotate_textarea","hasShadowDOM","cords","loading","selectedTerms","reactive","pendingRequests","context_menu_styling","bratOnto","t","el","onInput","e","doc","_cords","checkSelection","selection","getSelectionCoords","sel","atStart","range","rects","rect","event","ele","previousController","controller","inputText","autocompleteText","typingTimer","doneTypingInterval","currentMatchIndex","lastW","last2W","queryLastTwoTerms","annotatedTermsJSON","currentMatchedOntologyTerm","currentMatchedOntologyTermValue","processInput","reset","updateAutoCompleteText","tabkeyPressed","wordsArray","searchDB","propogateData","CallMLDataSetAPI","matchedTerm","OntologyTermAnnotation","defineCustomElement","VueOntologyTermAnnotation","OntologyTextAnnotation","VueOntologyTextAnnotation","OntologyAutoComplete","VueOntologyAutoComplete","OntologyAnnotate","VueOntologyAnnotate","OntologyCompose","VueOntologyCompose","customElementRegistry"],"mappings":"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"}